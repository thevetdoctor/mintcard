{"version":3,"sources":["data.js","firebase.js","components/cards/Card.js","redux/actions.js","redux/reducer.js","redux/store.js","components/dashboard/Dashboard.js","components/input/Input.js","components/input/Buttons.js","components/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["cardCollection","suits","digits","i","length","j","push","playerOne","playerTwo","first","map","card","tag","value","indexOf","flipState","dealCards","x","randomIndex","Math","floor","random","splice","dotenv","config","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","firebase","initializeApp","Card","src","onClick","className","alt","actions","setUser","type","setUsername","setPassword","setEmail","setTC","setAuthenticate","setTag","shuffleCards","playerCardPlay","opponentCardPlay","setPlayerTurn","setOpponentTurn","setPlayerMessage","setOpponentMessage","showResult","updateWinner","setWinner","setGameTie","stopContinueStatus","setLogOut","initialState","playerDeck","JSON","parse","localStorage","getItem","opponentDeck","playerTurf","opponentTurf","playerTurn","opponentTurn","playerTag","opponentTag","playerMessage","opponentMessage","gameTie","continueStatus","email","password","tc","user","winner","gameEnd","username","authenticated","store","createStore","state","action","console","log","setItem","stringify","data","error","deck","newPlayerDeck","playerCardIndex","findIndex","item","playCard","newOpponentDeck","opponentCardIndex","message","combinedCards","updatedPlayerDeck","updatedOpponentDeck","clear","devToolsEnhancer","Dashboard","getState","dispatch","useSelector","deckApiUrl","handleClick","e","preventDefault","target","split","owner","cardValue","useEffect","totalValue","setTimeout","arr","a","parseInt","reduce","b","idx","Input","props","label","name","pattern","maxLength","placeholder","onChange","checked","toUpperCase","required","style","marginTop","display","color","fontSize","Button","classname","url","disabled","Homepage","useState","loading","setLoading","signupMode","setSignupMode","apiUrl","fetchData","axios","method","headers","res","publicData","success","register","signIn","signInWithEmailAndPassword","then","catch","createUserWithEmailAndPassword","btnDisabled","defalutValue","height","width","App","showRules","logout","signOut","allCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f765b6f3.chunk.js","sourcesContent":["let cardCollection = [];\r\nconst suits = ['S', 'D', 'H', 'C'];\r\nconst digits = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'K', 'J', 'Q'];\r\n\r\nfor(let i = 0; i < suits.length; i++) {\r\n    for(let j = 0; j < digits.length; j++) {\r\n        cardCollection.push(`${digits[j]}${suits[i]}`);\r\n    }\r\n}\r\n\r\nconst playerOne = [];\r\nconst playerTwo = [];\r\nlet first = true;\r\n\r\nexport const deriveCardValue = (tag) => {\r\n    return digits.indexOf(tag[0]) + 1;\r\n}\r\ncardCollection = cardCollection.map(card => (\r\n    {\r\n        tag: card,\r\n        value: deriveCardValue(card),\r\n        flipState: true\r\n    }\r\n));\r\n\r\nconst dealCards = () => {\r\n    for(let x = cardCollection.length; x > 0; x--) {\r\n        const randomIndex = Math.floor(Math.random() * x);\r\n        if(first) {\r\n            playerOne.push(cardCollection[randomIndex]);\r\n        } else {\r\n            playerTwo.push(cardCollection[randomIndex]);\r\n        }\r\n        first =!first;\r\n        cardCollection.splice(randomIndex, 1);\r\n    }\r\n    return [playerOne, playerTwo];\r\n}\r\n\r\nexport default dealCards;\r\n","/* eslint-disable no-unused-vars */\r\nimport firebase from \"firebase\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst {REACT_APP_API_KEY, \r\n      REACT_APP_AUTH_DOMAIN, \r\n      REACT_APP_DATABASE_URL, \r\n      REACT_APP_PROJECT_ID, \r\n      REACT_APP_STORAGE_BUCKET, \r\n      REACT_APP_MESSAGING_SENDER_ID, \r\n      REACT_APP_APP_ID, \r\n      REACT_APP_MEASUREMENT_ID} = process.env;\r\n\r\nconst firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n  measurementId: REACT_APP_MEASUREMENT_ID\r\n};\r\n// console.log(firebaseConfig);\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n// const db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };","import React, { Fragment } from 'react';\r\nimport './card.css';\r\n\r\nexport default function Card({src, tag, flipState, onClick}) {\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <span className='card-span'> */}\r\n                <img\r\n                    className={`card ${flipState && 'filtered'}`}\r\n                    src={src}\r\n                    alt={tag}\r\n                    onClick={onClick}\r\n                />\r\n                {/* <div className='overlay'></div> */}\r\n            {/* </span> */}\r\n        </Fragment>\r\n    )\r\n}\r\n","const actions = {\r\n    setUser: { type: 'SET_USER'},\r\n    setUsername: { type: 'SET_USERNAME'},\r\n    setPassword: { type: 'SET_PASSWORD'},\r\n    setEmail: { type: 'SET_EMAIL'},\r\n    setTC: { type: 'SET_TC'},\r\n    setAuthenticate: { type: 'SET_AUTHENTICATE'},\r\n    setTag: { type: 'SET_TAG'},\r\n\r\n    shuffleCards: { type: 'SHUFFLE_CARDS'},\r\n    playerCardPlay: { type: 'PLAYER_CARD_PLAY'},\r\n    opponentCardPlay: { type: 'OPPONENT_CARD_PLAY'},\r\n    setPlayerTurn: { type: 'SET_PLAYER_TURN'},\r\n    setOpponentTurn: { type: 'SET_OPPONENT_TURN'},\r\n    setPlayerMessage: { type: 'SET_PLAYER_MESSAGE'},\r\n    setOpponentMessage: { type: 'SET_OPPONENT_MESSAGE'},\r\n    showResult: { type: 'SHOW_RESULT'},\r\n    updateWinner: { type: 'UPDATE_WINNER'},\r\n    setWinner: { type: 'SET_WINNER'},\r\n    setGameTie: { type: 'SET_GAME_TIE'},\r\n    stopContinueStatus: { type: 'STOP_CONTINUE_STATUS'},\r\n    setLogOut: { type: 'SET_LOGOUT'}\r\n  }\r\n  \r\n  export default actions;\r\n  ","import actions from \"./actions\";\r\n\r\nexport default function reducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case actions.setUser.type:\r\n            console.log('Adding user state');\r\n            localStorage.setItem('user', JSON.stringify(action.user));\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n            \r\n        case actions.setUsername.type:\r\n            console.log('Adding username');\r\n            localStorage.setItem('username', JSON.stringify(action.data));\r\n            return {\r\n                ...state, username: action.data, tag: ''\r\n            };\r\n        case actions.setPassword.type:\r\n            console.log('Adding password');\r\n            return {\r\n                ...state, password: action.data\r\n            };\r\n        case actions.setEmail.type:\r\n            console.log('Adding email');\r\n            return {\r\n                ...state, email: action.data\r\n            };\r\n        case actions.setTC.type:\r\n            console.log('Updating T&C');\r\n            return {\r\n                ...state, tc: action.data\r\n            };\r\n        case actions.setAuthenticate.type:\r\n            console.log('Setting authenticate');\r\n            localStorage.setItem('authenticated', true);\r\n            localStorage.setItem('user', true);\r\n            return {\r\n                ...state, authenticated: action.data, user: true, password: 'hidden'\r\n            };\r\n        case actions.setTag.type:\r\n            console.log('Tagging errors');\r\n            return {\r\n                ...state, tag: action.error\r\n            };\r\n\r\n        case actions.shuffleCards.type:\r\n            console.log('Shuffle cards');\r\n            const [playerDeck, opponentDeck] = action.deck;\r\n            localStorage.setItem('playerdeck', JSON.stringify(playerDeck));\r\n            localStorage.setItem('opponentdeck', JSON.stringify(opponentDeck));\r\n            localStorage.setItem('playerturf', JSON.stringify([]));\r\n            localStorage.setItem('opponentturf', JSON.stringify([]));\r\n            localStorage.setItem('playerturn', true);\r\n            localStorage.setItem('opponentturn', false);           \r\n            localStorage.setItem('gameend', false);           \r\n            return {\r\n                ...state, \r\n                playerDeck, \r\n                opponentDeck,\r\n                playerTurf: [],\r\n                opponentTurf: [],\r\n                playerMessage: '',\r\n                opponentMessage: '',\r\n                playerTurn: true,\r\n                opponentTurn: false,\r\n                showResult: false,\r\n                continueStatus: false,\r\n                gameEnd: false\r\n            };\r\n        case actions.playerCardPlay.type:\r\n            console.log('Player playing a card');\r\n            const newPlayerDeck = [...state.playerDeck];\r\n            const playerCardIndex = newPlayerDeck.findIndex(item => item.tag === action.playCard.tag);\r\n            // console.log(playerCardIndex, newPlayerDeck);\r\n            newPlayerDeck.splice(playerCardIndex, 1);\r\n            localStorage.setItem('playerturf', JSON.stringify([...state.playerTurf, action.playCard]));\r\n            localStorage.setItem('playerdeck', JSON.stringify(newPlayerDeck));\r\n            \r\n            return {\r\n                ...state, \r\n                playerTurf: [...state.playerTurf, action.playCard],\r\n                playerDeck: newPlayerDeck,\r\n                playerMessage: '',\r\n                opponentMessage: ''\r\n            };\r\n        case actions.opponentCardPlay.type:\r\n            console.log('Opponent playing a card');\r\n            const newOpponentDeck = [...state.opponentDeck];\r\n            const opponentCardIndex = newOpponentDeck.findIndex(item => item.tag ===  action.playCard.tag);\r\n            // console.log(opponentCardIndex, newOpponentDeck);\r\n            newOpponentDeck.splice(opponentCardIndex, 1);\r\n            localStorage.setItem('opponentturf', JSON.stringify([...state.opponentTurf, action.playCard]));\r\n            localStorage.setItem('opponentdeck', JSON.stringify(newOpponentDeck));\r\n            return {\r\n                ...state, \r\n                opponentTurf: [...state.opponentTurf, action.playCard],\r\n                opponentDeck: newOpponentDeck,\r\n                playerMessage: '',\r\n                opponentMessage: ''\r\n            };\r\n        case actions.setPlayerTurn.type:\r\n            console.log('Setting player turn');\r\n            localStorage.setItem('playerturn', true);\r\n            localStorage.setItem('opponentturn', false);\r\n            return {\r\n                ...state,\r\n                playerTurn: true,\r\n                opponentTurn: false,\r\n                playerMessage: '',\r\n                opponentMessage: ''            \r\n            };\r\n        case actions.setOpponentTurn.type:\r\n            console.log('Setting opponent turn');\r\n            localStorage.setItem('opponentturn', true);\r\n            localStorage.setItem('playerturn', false);\r\n            return {\r\n                ...state,\r\n                opponentTurn: true,\r\n                playerTurn: false,\r\n                playerMessage: '',\r\n                opponentMessage: ''            \r\n            };\r\n        case actions.setPlayerMessage.type:\r\n            console.log('Setting player message');\r\n            return {\r\n                ...state,\r\n                playerMessage: action.message,\r\n                opponentMessage: ''\r\n            };\r\n        case actions.setOpponentMessage.type:\r\n            console.log('Setting opponent message');\r\n            return {\r\n                ...state,\r\n                opponentMessage: action.message,\r\n                playerMessage: ''\r\n            };\r\n        case actions.showResult.type:\r\n            console.log('Showing result');\r\n            return {\r\n                ...state,\r\n                showResult: true\r\n            };\r\n        case actions.updateWinner.type:\r\n            console.log('Updating winner', action.winner);\r\n            const combinedCards = [...state.playerTurf, ...state.opponentTurf];   \r\n            if(action.winner === 'player') {\r\n                const updatedPlayerDeck = [...state.playerDeck, ...combinedCards];\r\n                localStorage.setItem('playerdeck', JSON.stringify(updatedPlayerDeck));\r\n                localStorage.setItem('playerturf', JSON.stringify([]));\r\n                localStorage.setItem('opponentturf', JSON.stringify([]));\r\n                return {\r\n                    ...state,\r\n                    showResult: false,\r\n                    playerTurf: [],\r\n                    opponentTurf: [],\r\n                    playerDeck: updatedPlayerDeck\r\n                };\r\n            } else {\r\n                const updatedOpponentDeck = [...state.opponentDeck, ...combinedCards];     \r\n                localStorage.setItem('opponentdeck', JSON.stringify(updatedOpponentDeck));\r\n                localStorage.setItem('playerturf', JSON.stringify([]));       \r\n                localStorage.setItem('opponentturf', JSON.stringify([]));       \r\n                return {\r\n                    ...state,\r\n                    showResult: false,\r\n                    playerTurf: [],\r\n                    opponentTurf: [],\r\n                    opponentDeck: updatedOpponentDeck\r\n            };\r\n        }\r\n        case actions.setGameTie.type:\r\n            console.log('Showing game tie');\r\n            return {\r\n                ...state,\r\n                // showResult: true,\r\n                gameTie: true,\r\n                continueStatus: true\r\n            };\r\n        case actions.setWinner.type:\r\n            console.log('Set overall Winner');\r\n            localStorage.setItem('winner', JSON.stringify(action.winner));       \r\n            localStorage.setItem('gameend', true);       \r\n            return {\r\n                ...state,\r\n                winner: action.winner\r\n            };\r\n        case actions.stopContinueStatus.type:\r\n            console.log('Stopping player continue status');\r\n            return {\r\n                ...state,\r\n                gameTie: false,\r\n                continueStatus: false\r\n            };\r\n        case actions.setLogOut.type:\r\n        console.log('Logout user');\r\n        localStorage.clear();\r\n\r\n        localStorage.setItem('playerdeck', JSON.stringify([]));\r\n        localStorage.setItem('opponentdeck', JSON.stringify([]));\r\n        localStorage.setItem('playerturf', JSON.stringify([]));\r\n        localStorage.setItem('opponentturf', JSON.stringify([]));\r\n        localStorage.setItem('playerturn', false);\r\n        localStorage.setItem('opponentturn', false);           \r\n        localStorage.setItem('gameend', false); \r\n        return {\r\n            user: null,\r\n            authenticated: false,\r\n            playerDeck: [],\r\n            opponentDeck: [],\r\n            playerTurf: [],\r\n            opponentTurf: []\r\n        };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n \r\nexport const initialState = {\r\n    playerDeck: JSON.parse(localStorage.getItem('playerdeck')) || [],\r\n    opponentDeck: JSON.parse(localStorage.getItem('opponentdeck')) || [],\r\n    playerTurf: JSON.parse(localStorage.getItem('playerturf')) || [],\r\n    opponentTurf: JSON.parse(localStorage.getItem('opponentturf')) ||  [],\r\n    playerTurn: JSON.parse(localStorage.getItem('playerturn')) || false,\r\n    opponentTurn: JSON.parse(localStorage.getItem('opponentturn')) || false,\r\n    playerTag: 'Player One',\r\n    opponentTag: 'Player Two',\r\n    playerMessage: '',\r\n    opponentMessage: '',\r\n    gameTie: false,\r\n    continueStatus: false,\r\n    email: '',\r\n    password: '',\r\n    tag: '',\r\n    tc: false,    \r\n    showResult: false,\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    winner: JSON.parse(localStorage.getItem('winner')) || '',\r\n    gameEnd: JSON.parse(localStorage.getItem('gameend')) || false,\r\n    username: JSON.parse(localStorage.getItem('username')) || '',\r\n    authenticated: JSON.parse(localStorage.getItem('authenticated')) || false\r\n};\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n// import { deriveCardValue } from '../../data';\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport Card from '../cards/Card';\r\nimport './dashboard.css';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\n\r\nexport default function Dashboard() {\r\n    const { getState, dispatch } = store;\r\n    const state = getState();\r\n    // console.log(state);\r\n    const {\r\n            playerDeck, \r\n            opponentDeck, \r\n            playerTurf, \r\n            opponentTurf,\r\n            playerTag,\r\n            opponentTag,\r\n            playerMessage,\r\n            opponentMessage,\r\n            playerTurn,\r\n            opponentTurn,\r\n            showResult,\r\n            gameTie,\r\n            gameEnd,\r\n            continueStatus,\r\n            username\r\n        } = useSelector(state => state);\r\n    // const deckApiUrl = 'https://deckofcardsapi.com/static/img/';\r\n    const deckApiUrl = `${process.env.PUBLIC_URL}/img/`;\r\n\r\n    console.log(`Cards left: ${playerDeck.length} / ${opponentDeck.length}`);\r\n\r\n    const handleClick = (e, item) => {\r\n        e.preventDefault();\r\n        const { alt } = e.target;\r\n        const [ tag, owner, cardValue ] = alt.split('/');\r\n        if(owner === 'player') {\r\n            if(playerTurf.length === opponentTurf.length) {\r\n                playerCardPlay({tag, value: cardValue});\r\n                if(continueStatus) {\r\n                    \r\n                    dispatch({\r\n                        type: 'SET_PLAYER_MESSAGE',\r\n                        message: 'Pick one more'\r\n                    }); \r\n                } else {\r\n                    dispatch({\r\n                        type: 'SET_OPPONENT_TURN'\r\n                    });\r\n                }\r\n            } else {\r\n                if(continueStatus) {\r\n                    playerCardPlay({tag, value: cardValue});\r\n\r\n                    dispatch({\r\n                        type: 'SET_OPPONENT_TURN'\r\n                    });\r\n                    dispatch({\r\n                        type: 'STOP_CONTINUE_STATUS'\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: 'SET_PLAYER_MESSAGE',\r\n                        message: 'Not your turn'\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if(playerTurf.length !== opponentTurf.length) {\r\n                // if(opponentTurn) {\r\n                    // opponentCardPlay({tag, value: cardValue});\r\n                // }\r\n                if(continueStatus) {\r\n                    \r\n                    dispatch({\r\n                        type: 'SET_OPPONENT_MESSAGE',\r\n                        message: 'Not your turn'\r\n                    });\r\n                } else {\r\n                    if((playerTurf.length - opponentTurf.length) <= 2) {\r\n                        opponentCardPlay({tag, value: cardValue});\r\n                        \r\n                        if((playerTurf.length - opponentTurf.length) === 1) {\r\n                            \r\n                            dispatch({\r\n                                type: 'SET_PLAYER_TURN'\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: 'SET_OPPONENT_MESSAGE',\r\n                                message: 'Pick one more'\r\n                            }); \r\n                        }\r\n                    } else {\r\n                        dispatch({\r\n                            type: 'SET_OPPONENT_MESSAGE',\r\n                            message: 'Not your turn'\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch({\r\n                        type: 'SET_OPPONENT_MESSAGE',\r\n                        message: 'Not your turn'\r\n                });\r\n            }\r\n        }\r\n    };\r\n  \r\n    const playerCardPlay = (item) => {\r\n        dispatch({\r\n            type: 'PLAYER_CARD_PLAY',\r\n            playCard: item\r\n        });\r\n    };\r\n    const opponentCardPlay = (item) => {\r\n        dispatch({\r\n            type: 'OPPONENT_CARD_PLAY',\r\n            playCard: item\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        if(playerTurf.length === 1 && opponentTurf.length === 1) {\r\n            if(totalValue(playerTurf) !== totalValue(opponentTurf)) {\r\n                const winner = totalValue(playerTurf) > totalValue(opponentTurf) ? 'player' : 'opponent';\r\n                \r\n                setTimeout(() => {\r\n                    dispatch({\r\n                        type: 'SHOW_RESULT'\r\n                    });\r\n                }, 2000);\r\n                setTimeout(() => {\r\n                    dispatch({\r\n                        type: 'UPDATE_WINNER',\r\n                        winner\r\n                    });\r\n                }, 5000);\r\n            } else {\r\n                setTimeout(() => {\r\n                    dispatch({\r\n                        type: 'SHOW_RESULT'\r\n                    });\r\n                    dispatch({\r\n                        type: 'SET_GAME_TIE'\r\n                    });\r\n                }, 2000); \r\n            }\r\n        } else if(playerTurf.length === opponentTurf.length && playerTurf.length % 2 === 1){\r\n                    if(totalValue(playerTurf) !== totalValue(opponentTurf)) {\r\n                        const winner = totalValue(playerTurf) > totalValue(opponentTurf) ? 'player' : 'opponent';\r\n                        \r\n                        setTimeout(() => {\r\n                            dispatch({\r\n                                type: 'SHOW_RESULT'\r\n                            });\r\n                        }, 2000);\r\n                        setTimeout(() => {\r\n                            dispatch({\r\n                                type: 'UPDATE_WINNER',\r\n                                winner\r\n                            });\r\n                        }, 5000);\r\n                    } else {\r\n                        setTimeout(() => {\r\n                            dispatch({\r\n                                type: 'SHOW_RESULT'\r\n                            });\r\n                            dispatch({\r\n                                type: 'SET_GAME_TIE'\r\n                            });\r\n                        }, 2000); \r\n                    }\r\n        } else if(playerDeck.length === 0 || opponentDeck.length === 0) {\r\n                \r\n                const winner = playerDeck.length === 0 ? 'Player Two' : 'Player One';\r\n            \r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: 'SHOW_RESULT'\r\n                });\r\n            }, 2000);\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: 'SET_WINNER',\r\n                    winner\r\n                });\r\n            }, 5000);\r\n        }\r\n        return () => {\r\n            console.log('Clean-up dashboard');\r\n        }\r\n    }, [playerDeck, opponentDeck]);\r\n\r\n    const totalValue = arr => {\r\n        const values= arr.map(a => parseInt(a.value, 10));\r\n        const total = values.reduce((a, b) => a + b, 0);\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <div className='dashboard'> \r\n            <div className='player'>\r\n                {playerDeck.map((item, idx) => (\r\n                    <Card \r\n                        key={idx}\r\n                        tag={`${item.tag}/player/${item.value}`}\r\n                        flipState={item.flipState}\r\n                        src={`${deckApiUrl}${item.tag}.png`}\r\n                        onClick={(e, item) => handleClick(e, item)}\r\n                    />\r\n                ))}\r\n                <p className={`player-tag ${playerTurn && 'active'}`}>{!username ? playerTag : username}</p>\r\n            </div>\r\n            <div className='game-board'>\r\n                <div className='player-message'>{playerMessage}</div>\r\n                <div className='card-board'>\r\n                    <div className='left-hand'>      \r\n                        {playerTurf.map((item, idx) => (\r\n                            <Card \r\n                            key={idx}\r\n                            tag={`${item.tag}/player/${item.value}`}\r\n                            flipState={item.flipState}\r\n                            src={showResult ? `${deckApiUrl}${item.tag}.png` :`${deckApiUrl}XX.png`}\r\n                            />\r\n                            ))}\r\n                    </div>\r\n                    <div className='result-board'>\r\n                        {showResult ? \r\n                        <Fragment>\r\n                            <br/>\r\n                            Player One<br/>\r\n                            {totalValue(playerTurf)}<br/>\r\n                                ||<br/>\r\n                            {totalValue(opponentTurf)}<br/>\r\n                            Player Two<br/>\r\n                            -------------- <br/>\r\n                            {!gameTie ?\r\n                            <>\r\n                            {!gameEnd ?\r\n                                <>\r\n                                {totalValue(playerTurf) > totalValue(opponentTurf) ? 'Player One takes all' : 'Player Two takes all'}\r\n                                </>\r\n                                :\r\n                                <>\r\n                                {totalValue(playerTurf) > totalValue(opponentTurf) ? 'Player One WINS' : 'Player Two WINS'}\r\n                                </>\r\n                            }\r\n                            </>\r\n                            :\r\n                            <span>\r\n                                {continueStatus && <>GAME TIE, PICK TWO CARDS EACH!!!</>}\r\n                            </span>\r\n                            }\r\n                            <br/>\r\n                            -------------- <br/>\r\n                        </Fragment>\r\n                        :\r\n                        <Fragment>\r\n                            {/* Calculating...     */}\r\n                        </Fragment>}\r\n                    </div>\r\n                    <div className='right-hand'>\r\n                        {opponentTurf.map((item, idx) => (\r\n                            <Card \r\n                            key={idx}\r\n                            tag={`${item.tag}/opponent/${item.value}`}\r\n                            flipState={item.flipState}\r\n                            src={showResult ? `${deckApiUrl}${item.tag}.png` :`${deckApiUrl}XX.png`}\r\n                            />\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n                <div className='player-message'>{opponentMessage}</div>\r\n            </div>\r\n            <div className='player'>\r\n                <p className={`player-tag ${opponentTurn && 'active'}`}>{opponentTag}</p>\r\n                {opponentDeck.map((item, idx) => (\r\n                    <Card \r\n                        key={idx}\r\n                        tag={`${item.tag}/opponent/${item.value}`}\r\n                        flipState={item.flipState}\r\n                        src={`${deckApiUrl}XX.png`}\r\n                        onClick={(e) => handleClick(e)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport store from '../../redux/store';\r\nimport './Input.css';\r\n\r\nexport default function Input(props) {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();     \r\n\r\n    const handleInputChange = (e) => {\r\n                const target = e.target;\r\n                const name = target.name;\r\n                let value;\r\n                if(target.type === 'checkbox') {\r\n                    value = target.checked;\r\n                } else {\r\n                    value = target.value;\r\n                }\r\n            \r\n                console.log(name, value, `SET_${name.toUpperCase()}`);\r\n                dispatch({\r\n                    type: `SET_${name.toUpperCase()}`,\r\n                    data: value\r\n                });\r\n              } \r\n\r\n    return (\r\n        <div className='input_section'>\r\n            <label>{props.label}</label>\r\n            <input\r\n                type={props.type}\r\n                name={props.name}\r\n                value={props.value}\r\n                pattern={props.pattern}\r\n                maxLength={props.maxLength}\r\n                placeholder={props.placeholder}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <span style={{ \r\n                    marginTop: '0.7em', \r\n                    display: 'inline', \r\n                    color: 'red',\r\n                    fontSize: '0.8em'\r\n                    }}>\r\n                        {props.tag}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { db } from \"./firebase\";\r\n// import { useCozaState } from './CozaProvider';\r\nimport './Buttons.css';\r\n\r\nexport default function Button(props) {\r\n// console.log(props);\r\n  return (\r\n      <button\r\n        className={props.classname}\r\n        type='button'\r\n        name={props.name}\r\n        url={props.url}\r\n        onClick={props.onClick}\r\n        disabled={props.disabled}\r\n        >\r\n        {props.name}\r\n      </button>\r\n    )\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { auth } from '../../firebase';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport Input from '../input/Input';\r\nimport Button from '../input/Buttons';\r\nimport store from '../../redux/store';\r\nimport './homepage.css';\r\n \r\nexport default function Homepage() {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();    \r\n    const { email, password, username, tc, tag } = useSelector(state => state);\r\n    const [loading, setLoading] = useState(false);\r\n    const [signupMode, setSignupMode] = useState(false);\r\n    \r\n  const apiUrl = `/auth/get_username/${username}`;\r\n\r\nconst fetchData = async() => {\r\n     try {\r\n         if(signupMode) {\r\n             if(username) {\r\n                 const res = await axios({\r\n                  method: 'GET',\r\n                  url: `${apiUrl}`,\r\n                  headers: {'Content-Type': 'application/json'}\r\n                  });\r\n                  dispatch({\r\n                    type: 'SET_PUBLIC_DATA',\r\n                    publicData: res.data\r\n                  });\r\n                if(res.data.success) {\r\n                    register();\r\n                } else {\r\n                    dispatch({\r\n                        type: 'SET_TAG',\r\n                        error: 'Username already taken'\r\n                    });  \r\n                }\r\n            } else {\r\n                dispatch({\r\n                    type: 'SET_TAG',\r\n                    error: 'Username not supplied'\r\n                }); \r\n            }\r\n        } else {\r\n            signIn();\r\n        }\r\n    }  catch(e) {\r\n        setLoading(false);\r\n        dispatch({\r\n        type: 'SET_TAG',\r\n        error: e.message ? 'Username taken, please choose another' : 'Error found'\r\n        });\r\n    }\r\n}\r\n  \r\n\r\n    const signIn = async() => {\r\n        // e.preventDefault();\r\n        await auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async auth => {\r\n                const res = await axios({\r\n                method: 'POST',\r\n                url: '/auth/login',\r\n                data: {email, password},\r\n                headers: {'Content-Type': 'application/json'}\r\n                });\r\n\r\n                console.log('User logged in');\r\n                setLoading(false);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: res.data\r\n                });\r\n                dispatch({\r\n                    type: 'SET_AUTHENTICATE',\r\n                    data: true\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                setLoading(false);\r\n                dispatch({\r\n                  type: 'SET_TAG',\r\n                  error: error.message.indexOf('no user') > -1 ? 'Account not found, please select signup' : error.message\r\n                });             \r\n              });\r\n    }\r\n\r\n    const register = async() => {\r\n        // e.preventDefault();\r\n        await auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(async (auth) => {\r\n                const res = await axios({\r\n                    method: 'POST',\r\n                    url: '/auth',\r\n                    data: {email, password, username},\r\n                    headers: {'Content-Type': 'application/json'}\r\n                    });\r\n\r\n                console.log('User signed up');\r\n                setLoading(false);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: res.data\r\n                });\r\n                dispatch({\r\n                    type: 'SET_AUTHENTICATE',\r\n                    data: true\r\n                });\r\n            })  \r\n            .catch((error) => {\r\n                console.log(\"It's an error\", error.message);\r\n                setLoading(false);\r\n                dispatch({\r\n                  type: 'SET_TAG',\r\n                  error: error.message.indexOf('already') > -1 ? 'Account already exist, please select login' : error.message\r\n\r\n                }); \r\n            });\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setLoading(true);\r\n        fetchData();\r\n    }\r\n\r\n    const btnDisabled = signupMode ? (!email || !password || !username || !tc) : (!email || !password);\r\n\r\n    return (\r\n        <div className='homepage-banner'>\r\n            <div className='homepage-top'>\r\n                <div className='tag-home'>\r\n                    <h1 className='title-home'>\r\n                        MintCard App\r\n                    </h1>\r\n                    <p className='slide-home'>\r\n                        {signupMode ? 'SIGNUP' : ''}\r\n                        <span \r\n                            className='mode' \r\n                            onClick={() => setSignupMode(!signupMode)}\r\n                            >\r\n                            {signupMode ? 'click to login ?' : 'click to signup ?'}\r\n                        </span>\r\n                        {signupMode ? '' : 'LOGIN'}\r\n                    </p>\r\n                    <Input \r\n                        label='Email'\r\n                        type='text'\r\n                        value={email}\r\n                        defalutValue={email}\r\n                        name='email'\r\n                        placeholder='Enter your email'\r\n                        required\r\n                    />\r\n                    <Input \r\n                        label='Password'\r\n                        type='password'\r\n                        value={password}\r\n                        name='password'\r\n                        placeholder='Enter your password'\r\n                        required\r\n                    />\r\n                    {signupMode &&\r\n                    <Input \r\n                        label='Username - github'\r\n                        type='text'\r\n                        value={username}\r\n                        // tag={tag}\r\n                        name='username'\r\n                        placeholder='Enter your github username'\r\n                    />}\r\n                    <span className='tag'>{tag}</span>\r\n                    {signupMode &&\r\n                    <div className={`tc ${!tc && 'tc-red'}`}>\r\n                    <Input \r\n                        type='checkbox'\r\n                        value={tc}\r\n                        name='tc'\r\n                        // placeholder='Enter your github username'\r\n                    /><span>Accept Terms & Conditions</span>\r\n                    </div>}\r\n                    {!loading ?\r\n                    <Button\r\n                        name={signupMode ? 'SIGNUP' : 'LOGIN'}\r\n                        classname='btn'\r\n                        onClick={handleSubmit}\r\n                        disabled={btnDisabled}\r\n                    />\r\n                    :\r\n                    <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={80} \r\n                        width={80} \r\n                    />}\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport {useSelector} from 'react-redux';\nimport data from './data';\nimport { auth } from './firebase';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Homepage from './components/homepage/Homepage';\nimport './App.css';\nimport store from './redux/store';\nimport { ImShuffle } from 'react-icons/im';\nimport { FaTelegramPlane } from 'react-icons/fa';\nimport { IoBookSharp } from 'react-icons/io5';\n// import io from 'socket.io-client'\n\n// let socket = io(`http://localhost:8001`);\n\nfunction App() {\n  const { getState, dispatch } = store;\n  const state = getState();\n  const {user} = useSelector(state => state);\n  const { authenticated } = useSelector(state => state);\n\n  const [showRules, setShowRules] = useState(false);\n\n  const handleShuffle = () => {\n    const allCards = data();\n    console.log(allCards);\n    const [playerDeck, opponentDeck] = allCards;\n    dispatch({\n        type: 'SHUFFLE_CARDS',\n        deck: [playerDeck, opponentDeck]\n    });\n  };\n\n  const logout = async() => {\n    await auth\n            .signOut()\n            .then(() => {\n                console.log(\"User logged out\");\n                dispatch({\n                    type: 'SET_LOGOUT',\n                });\n            })\n            .catch((error) => {\n                console.log(error.message);\n            }); \n    };\n\n  useEffect(() => {\n    // socket.on('init', message => {\n    //   console.log(message);\n    //   socket.emit('message', {response: 'Connection confirmed'});\n    // });\n    // socket.on('message', message => {\n    //   console.log(message);\n    // });\n    // socket.emit('gameState', state);\n    // socket.on('state', state => {\n    //   console.log('state received: ', state);\n    // });\n\n    // fetch(\"/api\")\n    // .then((res) => res.json())\n    // .then((data) => console.log(data.message));\n\n    return () => {\n      console.log('Clean-up App.js');\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* <h2>\n        Welcome to MintCard\n      </h2> */}\n      {/* <div className='rules'>\n        <span>Rules</span>|\n        <span>A stands for 1</span>|\n        <span>K stands for 11</span>|\n        <span>J stands for 12</span>|\n        <span>Q stands for 13</span>|\n      </div>\n      <div className='rules'>\n        |<span>Spade gives extra 1</span>|\n        <span>Diamond gives extra 2</span>|\n        <span>Heart gives extra 3</span>|\n        <span>Club gives extra 4</span>|\n      </div> */}\n      <div className='tabs'>\n        <p className='shuffle' onClick={handleShuffle}>\n          Shuffle\n          <ImShuffle />\n        </p>\n        <p className='save'>\n          Save Game\n          <FaTelegramPlane />\n        </p>\n        {!showRules && (\n          <p className='rules'>\n            Rules\n            <IoBookSharp />\n          </p>\n        )}\n        <p className='logout' onClick={() => logout()}>\n          Logout\n          <FaTelegramPlane />\n        </p>\n      </div>\n      {authenticated && <Dashboard />}\n      {!authenticated && <Homepage />}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}